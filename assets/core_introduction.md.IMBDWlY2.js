import{_ as e,c as t,o as a,a2 as o}from"./chunks/framework.Bt90qj3N.js";const b=JSON.parse('{"title":"Introduction","description":"","frontmatter":{},"headers":[],"relativePath":"core/introduction.md","filePath":"core/introduction.md"}'),r={name:"core/introduction.md"},i=o('<h1 id="introduction" tabindex="-1">Introduction <a class="header-anchor" href="#introduction" aria-label="Permalink to &quot;Introduction {#introduction}&quot;">​</a></h1><h2 id="what-is-psitta" tabindex="-1">What is Psitta? <a class="header-anchor" href="#what-is-psitta" aria-label="Permalink to &quot;What is Psitta?&quot;">​</a></h2><p>Psitta is a modern Web internationalization framework designed to be <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Modules" target="_blank" rel="noreferrer">ESM-only</a>, type-safe, machine-translatable and provide easy-to-use i18n common tasks based on the <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl" target="_blank" rel="noreferrer">Intl Web APIs</a>. In simple terms, it wraps around Web APIs to simplify the localization of messages, URLs, and values. Psitta also includes support for locale detection and automatic translation.</p><div class="tip custom-block" style="padding-top:8px;"><p>Want to try it out quickly? Jump to the <a href="/core/guide/quickstart.html">Quickstart</a>.</p></div><h2 id="use-cases" tabindex="-1">Use Cases <a class="header-anchor" href="#use-cases" aria-label="Permalink to &quot;Use Cases&quot;">​</a></h2><p>Psitta is suitable for a variety of use cases, including:</p><ul><li>Marketing sites</li><li>Portfolios</li><li>Web apps</li><li>And more...</li></ul><h2 id="what-about-other-i18n-frameworks" tabindex="-1">What About Other I18n Frameworks? <a class="header-anchor" href="#what-about-other-i18n-frameworks" aria-label="Permalink to &quot;What About Other I18n Frameworks?&quot;">​</a></h2><p>Psitta has been started as a side project to experiment with a non-polluted approach to keys, using human-language keys instead. It&#39;s primarily designed to work well with small personal projects (which is recommended), rather than large enterprise software. For larger projects, other i18n frameworks may be more suitable.</p>',9),s=[i];function n(l,c,d,h,u,p){return a(),t("div",null,s)}const f=e(r,[["render",n]]);export{b as __pageData,f as default};
