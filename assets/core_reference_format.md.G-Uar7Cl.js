import{_ as t,E as e,c as n,m as i,a as s,J as l,a2 as o,o as r}from"./chunks/framework.CmNvrHOf.js";const v=JSON.parse('{"title":"Format API","description":"","frontmatter":{},"headers":[],"relativePath":"core/reference/format.md","filePath":"core/reference/format.md"}'),p={name:"core/reference/format.md"},h=i("h1",{id:"format-api",tabindex:"-1"},[s("Format API "),i("a",{class:"header-anchor",href:"#format-api","aria-label":'Permalink to "Format API {#format-api}"'},"​")],-1),d={id:"format",tabindex:"-1"},c=i("a",{class:"header-anchor",href:"#format","aria-label":'Permalink to "format <Badge type="info" text="function" /> {#format}"'},"​",-1),k=o(`<p>Formats a value for display based on its type and provided options.</p><ul><li><p><strong>Signature</strong></p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> format</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">value</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> V</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">locale</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Locale</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> string</span></span></code></pre></div></li><li><p><strong>Parameters</strong></p><ul><li><code>value</code>: The value to be formatted. <ul><li>If a single argument, it&#39;s the value itself.</li><li>If an array, the first element is the value and the second is an options object.</li></ul></li><li><code>locale</code>: The optional locale code to use for formatting (defaults to user&#39;s locale).</li></ul></li><li><p><strong>Returns</strong></p><p>The formatted representation of the value.</p></li><li><p><strong>Details</strong></p><p>This function acts as a wrapper around the built-in <code>Intl</code> API for formatting different data types. It supports:</p><ul><li>Numbers using <code>toLocaleString</code></li><li>Dates using <code>toLocaleDateString</code></li><li><code>RelativeTime</code> objects using <code>Intl.RelativeTimeFormat</code></li><li><code>DateRange</code> objects using <code>Intl.DateTimeFormat.formatRange</code></li><li>Arrays using <code>Intl.ListFormat</code></li></ul><p>Additionally, it allows for custom formatting functions through the <code>custom</code> option within the options object. If provided, the custom function receives the value, locale, and remaining options and should return the formatted string.</p><p>This function also leverages utilities like <code>RelativeTime</code> and <code>DateRange</code> for representing time-related data before formatting.</p></li><li><p><strong>Examples</strong></p><div class="language-typescript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">typescript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Formatting a date with US English locale</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> formattedDate</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> format</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Date</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2024</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">11</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;en-US&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(formattedDate);</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Output: &quot;4/11/2024&quot;</span></span></code></pre></div></li></ul>`,2);function g(m,u,f,E,y,F){const a=e("Badge");return r(),n("div",null,[h,i("h2",d,[s("format "),l(a,{type:"info",text:"function"}),s(),c]),k])}const C=t(p,[["render",g]]);export{v as __pageData,C as default};
